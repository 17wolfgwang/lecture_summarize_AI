After connecting to it via TCP, your browser, called the client, uses the hypertext transfer protocol to send an http request to the server, which then gives a response, ideally containing the contents of the webpage. The actual website most often consists of three parts: An HTML file contains all the content of a website and is basically just a collection of elements, which can be text, links, buttons and so on. A CSS file controls the visuals and makes a website look nice. But, a website is useless if pressing nice looking buttons does nothing, so a language like JavaScript adds functionality. But sometimes things can go wrong. With every http response comes a response code, which carries information about the status of the response. For example, 200 means "OK", and anything starting with 4 is an error, the most famous one being "404 â€“ page not found". HTTP requests can carry different methods, for example GET, POST, PUT and DELETE, so retrieve, add, update and delete information. These are often used by Application Programming Interfaces, which connect two applications and allow them to interact with each other, for example store and retrieve data from a database.

The most common type of database is a relational database, which uses tables to store data. Columns of a table contain different attributes, and rows represent individual datapoints. Also, each table has one unique attribute called the primary key. A foreign key is the primary key of another table, establishing a relationship between the two. In this case, each book is connected to an author. With a language like SQL, you can write statements to work with data from these tables. You could look up the titles and authors of all books, whose title starts with "H", but for that, we have to join the authors table with the books table on the matching key to combine two attributes from different tables into one, giving us this output. These statements are useful, but you've got to be careful, or you might just delete an entire database with one line of code. But, don't worry. That's never happened before. Behind every login page is a database with usernames and passwords. When a user tries to log in, an SQL query is often used to check if the user input matches with an entry in the database. That's good, but, a devious actor could type something like this, which changes the query by terminating the string early and commenting out the rest, which means as long as this username exists in the database, access is granted.

This is called an SQL injection attack and is one of the easiest ways hackers get places they're not supposed to. Hearing about all these concepts is one thing, but to really learn them, you have to see them in action and use them yourself, which is exactly what you can do with Brilliant, which has thousands of interactive lessons for everything from math and data science to programming and AI.

They make knowledge stick with visual lessons and interactive problems, which is not only fun and builds intuitive problem solving skills, but also proven to be 6x more effective than simply watching hours of lectures. I know that making time to learn new skills can be difficult, but Brilliant makes it so easy: You can build valuable knowledge from the ground up in just a couple of minutes a day with bite-sized lessons from any device, anywhere, anytime.

You'll go from the basics of data science to analysing real datasets from Spotify in absolutely no time, which you can supplement with math fundamentals and programming courses in Python to build one of the most in demand skillsets of our time.

The best part? You can try everything Brilliant has to offer for free for a full 30 days, by visiting brilliant.org/WackyScience/. You'll also get 20% off an annual premium subscription. Thanks to Brilliant for sponsoring this video.